@model MutualFundsComparison.Models.CompareModel

@{
    ViewBag.Title = "Compare";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<p>
    <p>Select dates</p>
    <div class="form-inline">
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
                @Html.TextBoxFor(m => m.DateFrom, new { @class = "date-picker form-control", placeholder = "date from", @Value = Model.DateFrom.HasValue ? Model.DateFrom.Value.ToString("yyyy-MM-dd") : "" })
                @Html.ValidationMessageFor(x => x.DateFrom)
            </div>
        </div>

        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
                @Html.TextBoxFor(m => m.DateTo, new { @class = "date-picker form-control", placeholder = "date to", @Value = Model.DateTo.HasValue ? Model.DateTo.Value.ToString("yyyy-MM-dd") : "" })
                @Html.ValidationMessageFor(x => x.DateTo)
                </div>
        </div>
    </div>
    <br />

<form data-toggle="validator" role="form" id="formInvestmentDetails">
        <p>Investment details</p>
        <div class="form-inline">
            <div class="form-group myRow">
                <div class="input-group">
                    <span class="input-group-addon">$</span>
                    @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", placeholder = "investment amount", required = "required" })
                    <br />
                    @Html.ValidationMessageFor(x => x.Amount, "type investment amount", new { @class = "help-inline" })
                </div>
            </div>


            <div class="form-group myRow">
                <div class="input-group">
                    <span class="input-group-addon">%</span>
                    @Html.TextBoxFor(m => m.Rate, new { @class = "form-control", placeholder = "annual investment rate", required = "required" })
                    <br />
                    @Html.ValidationMessageFor(x => x.Rate, "type investment rate", new { @class = "help-inline" })
                </div>
            </div>
        </div>
        <br />

        <button type="button" class="btn btn-success" onclick="calculateProfits()">Calculate</button>
</form>




<div id="frame-content">
    @if (Model.DataFrame != null)
    {
        Html.RenderPartial("Chart", Model);
    }
</div>



<script type="text/javascript">
    function calculateProfits() {
        if ($("#Amount").val() == "" || $("#Rate").val() == "") {
            alert("Fill investment details");
            return "";
        }

        $.ajax({
            type: "POST",
            url: '@Url.Content("~/Compare/Investment")',
            data: {
                dateFrom: $("#DateFrom").val(),
                dateTo: $("#DateTo").val(),
                amount: $("#Amount").val(),
                rate: $("#Rate").val()
            },
            success: function (result) {
                $("#frame-content").html(result);
            },
            error: function (request, status, error) {
            }
        });
    }
</script>

