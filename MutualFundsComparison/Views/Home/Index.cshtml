@model MutualFundsComparison.Models.HomeModel
@{
    ViewBag.Title = "Home";
}




@using (Html.BeginForm("Upload", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="file" name="file" style="cursor:pointer;" />
    <br />
    <p>Select dates:</p>
    
    <p>
        <div class="form-inline">
            @Html.TextBoxFor(m => m.DateFrom, new { @class = "date-picker form-control", placeholder = "Date from" })
            @Html.ValidationMessageFor(x => x.DateFrom)

            @Html.TextBoxFor(m => m.DateTo, new { @class = "date-picker form-control", placeholder = "Date to" })
            @Html.ValidationMessageFor(x => x.DateTo)

            @if (Model.DataFrame != null)
            {
                <button type="button" class="btn btn-success" onclick="filterFrames()">Filter</button>
            }
        </div>
    </p>
    <input type="submit" style="cursor:pointer;" class="btn btn-success" id="upload" value="Upload" />
    
    <div id="frame-content">
        @if (Model.DataFrame != null)
        {
            Html.RenderPartial("Frames", Model);
        }
    </div>
}


<script type="text/javascript">
    var json = @(Html.Raw(Json.Encode(Model.DataFrame)));
    var data = this.parseJson(json);
    renderChart(data);


    function filterFrames() {
        $.ajax({
            type: "POST",
            url: '@Url.Content("~/Home/Filter")',
            data: {
                dateFrom: $("#DateFrom").val(),
                dateTo: $("#DateTo").val()
            },
            success: function (result) {
                $("#frame-content").html(result);

                var parseDate = function(x) { return new Date(parseInt(x.substr(6))).toISOString().slice(0,10); };
                var json = @(Html.Raw(Json.Encode(Model.DataFrame)));
                var data = this.parseJson(json);
                renderChart(data);
            }
        });
    }
</script>